[{"id":"b2199363.bd9d2","type":"tab","label":"Test Error handling","disabled":false,"info":""},{"id":"120be936.1da507","type":"function","z":"b2199363.bd9d2","name":"Read Device Profile-1","func":"var readData = (fc, slaveID, address, quantity) => {\n        msg.payload = {\n        'fc': fc,\n        'unitid': slaveID,\n        'address': address, \n        'quantity': quantity\n} \n}\n\nvar device_Profile = global.get('deviceProfile_30');\nvar index = global.get('deviceProfile_30_Index');\nvar profile = device_Profile[index];\n// node.warn(profile)\nvar regAdd = profile.read.regAdd;\nvar readIndex = global.get('deviceProfile_30_ReadIndex');\nvar readValue = regAdd[readIndex];\n// node.warn(readValue)\nvar slaveID = profile.read.slaveID;\n// var slaveID = 2\nvar fc = readValue.fc;\n// var fc = 3\nvar address = readValue.address;\nvar quantity = readValue.quantity;\n\nglobal.set('send_Data_deviceProfile_30', false);\nreadData(fc, slaveID, address, quantity);\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":660,"y":560,"wires":[["fe06a895.e0f448"]]},{"id":"42ee12e9.96085c","type":"switch","z":"b2199363.bd9d2","name":"","property":"send_Data_deviceProfile_30","propertyType":"global","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1130,"y":680,"wires":[["f6079d4d.ce964"]]},{"id":"f6079d4d.ce964","type":"debug","z":"b2199363.bd9d2","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payloadData","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":740,"wires":[]},{"id":"fe06a895.e0f448","type":"modbus-flex-getter","z":"b2199363.bd9d2","name":"10.102.255.141","showStatusActivities":true,"showErrors":true,"logIOActivities":false,"server":"ecf23d09.b3be4","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":900,"y":560,"wires":[["575eaebf.67e"],[]]},{"id":"575eaebf.67e","type":"delay","z":"b2199363.bd9d2","name":"","pauseType":"delay","timeout":"200","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1110,"y":551,"wires":[["6c6e1ee6.d90e3"]]},{"id":"481201c3.4c94a","type":"function","z":"b2199363.bd9d2","name":"Dp-1 INV-1, MET-1, MET-2","func":"var deviceProfile_30 = [\n   {\n        deviceName: \"Inverter-1\",\n        deviceProfile: {\n            deviceNo: 1,\n            deviceType: 3\n        },\n        read: {\n            slaveID: 3,\n            regAdd: [\n                    // Start 16 bits\n                    {\n                        fc: 4,\n                        address: 5002,\n                        quantity: 1\n                    },\n                    {\n                        fc: 4,\n                        address: 5007,\n                        quantity: 1\n                    },\n                    {\n                        fc: 4,\n                        address: 5010,\n                        quantity: 6\n                    },\n                    {\n                        fc: 4,\n                        address: 5018,\n                        quantity: 6\n                    },\n                    {\n                        fc: 4,\n                        address: 5035,\n                        quantity: 3\n                    },\n                    {\n                        fc: 4,\n                        address: 5044,\n                        quantity: 1\n                    },\n                    {\n                        fc: 4,\n                        address: 5114,\n                        quantity: 10\n                    },\n                    {\n                        fc: 4,\n                        address: 5129,\n                        quantity: 8\n                    },\n                    // Start 32 bits\n                    {\n                        fc: 4,\n                        address: 5003,\n                        quantity: 4\n                    },\n                    {\n                        fc: 4,\n                        address: 5016,\n                        quantity: 2\n                    },\n                    {\n                        fc: 4,\n                        address: 5030,\n                        quantity: 2\n                    },\n                    {\n                        fc: 4,\n                        address: 7012,\n                        quantity: 24\n                    },\n                    \n                ]\n        }\n    },\n    {\n        deviceName: \"Meter-1\",\n        deviceProfile: {\n            deviceNo: 1,\n            deviceType: 182\n        },\n        read: {\n            slaveID: 1,\n            regAdd: [\n                    // Start 32 bits\n                    {\n                        fc: 3,\n                        address: 2699,\n                        quantity: 2\n                    },\n                    {\n                        fc: 3,\n                        address: 2999,\n                        quantity: 6\n                    },\n                    {\n                        fc: 3,\n                        address: 3009,\n                        quantity: 2\n                    },\n                    {\n                        fc: 3,\n                        address: 3059,\n                        quantity: 2\n                    }\n                ]\n        }\n    },\n    {\n        deviceName: \"Meter-2\",\n        deviceProfile: {\n            deviceNo: 2,\n            deviceType: 182\n        },\n        read: {\n            slaveID: 2,\n             regAdd: [\n                    // Start 32 bits\n                    {\n                        fc: 3,\n                        address: 2699,\n                        quantity: 2\n                    },\n                    {\n                        fc: 3,\n                        address: 2999,\n                        quantity: 6\n                    },\n                    {\n                        fc: 3,\n                        address: 3009,\n                        quantity: 2\n                    },\n                    {\n                        fc: 3,\n                        address: 3059,\n                        quantity: 2\n                    }\n                ]\n        }\n    }\n    \n    ]\n\nglobal.set('deviceProfile_30', deviceProfile_30);\nglobal.set('deviceProfile_30_Index', 0);\nglobal.set('deviceProfile_30_ReadIndex', 0);\nglobal.set('deviceProfile_30_StoreData', []);\nglobal.set(\"deviceProfile_30_Count\", 0);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":560,"wires":[["120be936.1da507"]]},{"id":"6c6e1ee6.d90e3","type":"function","z":"b2199363.bd9d2","name":"Display data DeviceProfile-30","func":"\nvar device_profile = global.get('deviceProfile_30');\nvar number_of_device = device_profile.length;\n\nvar index = global.get('deviceProfile_30_Index');\nvar profile = device_profile[index];\nvar regAdd =  profile.read.regAdd;\nvar number_Of_DataPacket = regAdd.length;\n\nglobal.set('stop_to_read_deviceProfile_30_dataPacket', false);\n\nvar dataPacket_Count =  global.get(\"deviceProfile_30_dataPacket_Count\") || 0;\n    dataPacket_Count += 1;\n    global.set('deviceProfile_30_dataPacket_Count', dataPacket_Count);\n\nvar timeStamp = () => {\n     let dateObj = new Date(),\n        month = '' + (dateObj.getMonth() + 1),\n        day = '' + dateObj.getDate(),\n        year = dateObj.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n  \n    let time = dateObj.toLocaleTimeString('en-IN', {timeZone: 'Asia/Kolkata', hour12: false });\n    let dateTime = `${year}-${month}-${day} ${time}`;\n    return dateTime;\n}\n\nvar displayData = () => {\n    let errorCount = global.get('deviceProfile_30_errorCount');\n    if(errorCount == 1){\n    node.warn('Data read successfully After Retry')\n    global.set('deviceProfile_30_errorCount', null);\n    }\n    \n    let data = [];\n    let getStoreData = global.get('deviceProfile_30_StoreData');\n    \n    getStoreData.forEach(item => {\n        item.forEach(value => {\n            data.push(value);\n        })\n    })\n    \n    let finalData = data.toString();\n    let deviceType = profile.deviceProfile.deviceType;\n    let deviceNo = profile.deviceProfile.deviceNo;\n    let dateTime = timeStamp();\n    \n    msg.payloadData = {\n     request: {\n        \"PlantID\": 172,\n        \"LoggerNo\": 1,\n        \"DeviceType\": deviceType,\n        \"DeviceNo\": deviceNo,\n        \"Data\": finalData,\n        \"TimeStamp\": dateTime,\n        \"Error\": 0,\n        \"DataLength\": data.length\n     }\n    }\n    global.set('deviceProfile_30_StoreData', []);\n}   \n\nvar storeData = () => {\n    // msg.payload = [1,2,3,4,5];\n    let getStoreData = global.get('deviceProfile_30_StoreData');\n    getStoreData.push(msg.payload);\n    global.set('deviceProfile_30_StoreData', getStoreData);\n}\n\nif(dataPacket_Count != number_Of_DataPacket){\n  // Storing Data  \n  storeData();\n  let index = global.get('deviceProfile_30_ReadIndex');\n  index += 1;  \n  global.set('deviceProfile_30_ReadIndex', index);  \n  global.set('stop_deviceProfile_30', false);\n  global.set('stop_to_read_deviceProfile_30_dataPacket', true);\n\n}else {\n    // Storing Data  \n    storeData();\n    global.set('stop_to_read_deviceProfile_30_dataPacket', false);\n    global.set('deviceProfile_30_ReadIndex', 0);\n    global.set(\"deviceProfile_30_dataPacket_Count\", null);\n    global.set('send_Data_deviceProfile_30', true);\n    // display Data\n    displayData();\n\n    // Number of Device Loop\n    var deviceCount =  global.get(\"deviceProfile_30_Count\");\n    deviceCount += 1;\n    global.set('deviceProfile_30_Count', deviceCount);\n    \n    if(deviceCount != number_of_device ){\n        let index = global.get('deviceProfile_30_Index');\n        index += 1;\n        global.set('deviceProfile_30_Index', index);\n        global.set('stop_deviceProfile_30', true);\n        global.set('stop_to_read_deviceProfile_30_dataPacket', false);\n    }else {\n        global.set('stop_to_read_deviceProfile_30_dataPacket', false);\n        global.set('stop_deviceProfile_30', false);\n        global.set('deviceProfile_30_Count', null);\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1150,"y":620,"wires":[["42ee12e9.96085c"]]},{"id":"cc7d63d0.36604","type":"catch","z":"b2199363.bd9d2","name":"","scope":null,"uncaught":false,"x":500,"y":340,"wires":[["fd41d2ba.a8bd9","1d9d02ce.4be4dd"]]},{"id":"fd41d2ba.a8bd9","type":"function","z":"b2199363.bd9d2","name":"Error Frunction","func":"var displayError = () => {\n    node.warn('displayError')\n    let device_Profile = global.get('deviceProfile_30');\n    let index = global.get('deviceProfile_30_Index');\n    let profile = device_Profile[index];\n    \n    let data = null;\n    let deviceType = profile.deviceProfile.deviceType;\n    let deviceNo = profile.deviceProfile.deviceNo;\n    let dateTime = '10/10/2021' // I will add letter this functionality\n    \n    msg.payloadData = {\n     request: {\n        \"PlantID\": 172,\n        \"LoggerNo\": 1,\n        \"DeviceType\": deviceType,\n        \"DeviceNo\": deviceNo,\n        \"Data\": data,\n        \"TimeStamp\": dateTime,\n        \"Error\": 1,\n     }\n    }\n}  \n\nvar moveOnNextDevice = () => {\n    node.warn('moveOnNextDevice')\n    global.set('deviceProfile_30_StoreData', []);\n    let device_profile = global.get('deviceProfile_30');\n    let number_of_device = device_profile.length;\n    \n    global.set('stop_to_read_deviceProfile_30_dataPacket', false);\n    msg.error_Status = 'moveOnNextDevice';\n    let deviceCount =  global.get(\"deviceProfile_30_Count\");\n    deviceCount += 1;\n    global.set('deviceProfile_30_Count', deviceCount);\n    \n    let index = global.get('deviceProfile_30_Index');\n    index += 1;\n    global.set('deviceProfile_30_Index', index);\n    global.set('deviceProfile_30_ReadIndex', 0);\n    \n    if(deviceCount == number_of_device){\n        node.warn('number_of_device If condition');\n        msg.error_Status = '';\n        global.set(\"deviceProfile_30_Count\", null);\n        global.set('stop_deviceProfile_30', false);\n        global.set('stop_to_read_deviceProfile_30_dataPacket', false);\n    }\n}\n\nlet retryToRead = ()  => {\n        let index = global.get('deviceProfile_30_Index');\n        global.set(\"deviceProfile_30_dataPacket_Count\", null);\n        \n        let errorCount = global.get('deviceProfile_30_errorCount') || 0;\n        errorCount += 1;\n        node.warn(errorCount + ' errorCount')\n        global.set('deviceProfile_30_errorCount', errorCount);\n        if(errorCount != 2){\n            node.warn('If Block')\n            global.set('deviceProfile_30_StoreData', []);\n            msg.error_Status = 'retry';\n            global.set('stop_to_read_deviceProfile_30_dataPacket', true);\n            global.set('deviceProfile_30_Index', index);\n            global.set('deviceProfile_30_ReadIndex', 0);   \n        }else {\n            node.warn('else')\n            displayError();\n            global.set('deviceProfile_30_errorCount', null);\n            moveOnNextDevice();\n        }\n    }\n\nif(msg.error.source.name == \"10.102.255.141\"){\n    // || msg.error.message == \"Error: Client Not Ready To Read At State init\"\n    if(msg.error.message == \"[object Object]\"){\n\n    let slaveID = msg.payload.unitid;\n    //Inverter-1\n    if(slaveID == 3){\n        node.warn('Error Occur in INV-1')\n        retryToRead();\n    }\n    //Meter-1\n    if(slaveID == 1){\n        node.warn('Error Occur in MET-1')\n        retryToRead();\n    }\n    //Meter-2\n    if(slaveID == 2){\n        node.warn('Error Occur in MET-2')\n        retryToRead();\n    }\n}\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":691,"y":340,"wires":[["38e3b014.855"]]},{"id":"38e3b014.855","type":"switch","z":"b2199363.bd9d2","name":"","property":"error_Status","propertyType":"msg","rules":[{"t":"eq","v":"retry","vt":"str"},{"t":"eq","v":"moveOnNextDevice","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":846,"y":340,"wires":[["cd00d93.d74bb28"],["491294fa.f9542c","4dcc4483.1f091c"]]},{"id":"cd00d93.d74bb28","type":"delay","z":"b2199363.bd9d2","name":"","pauseType":"delay","timeout":"1000","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1025,"y":334,"wires":[["1832da6c.8754b6"]]},{"id":"491294fa.f9542c","type":"debug","z":"b2199363.bd9d2","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payloadData","targetType":"msg","statusVal":"","statusType":"auto","x":1010,"y":260,"wires":[]},{"id":"715f9cc5.2f8234","type":"complete","z":"b2199363.bd9d2","name":"Device Profile-5","scope":["6c6e1ee6.d90e3"],"uncaught":false,"x":300,"y":480,"wires":[["e723cf47.5487d"]]},{"id":"e723cf47.5487d","type":"switch","z":"b2199363.bd9d2","name":"","property":"stop_deviceProfile_30","propertyType":"global","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":451,"y":480,"wires":[["120be936.1da507"]]},{"id":"cdc9e3f2.3f94a","type":"complete","z":"b2199363.bd9d2","name":"Read Device Profile-1","scope":["6c6e1ee6.d90e3"],"uncaught":false,"x":260,"y":640,"wires":[["b99fc669.db6d28"]]},{"id":"b99fc669.db6d28","type":"switch","z":"b2199363.bd9d2","name":"","property":"stop_to_read_deviceProfile_30_dataPacket","propertyType":"global","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":450,"y":640,"wires":[["120be936.1da507"]]},{"id":"76833b24.2a1074","type":"inject","z":"b2199363.bd9d2","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":160,"y":560,"wires":[["481201c3.4c94a"]]},{"id":"1d9d02ce.4be4dd","type":"debug","z":"b2199363.bd9d2","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":750,"y":260,"wires":[]},{"id":"1832da6c.8754b6","type":"function","z":"b2199363.bd9d2","name":"","func":"node.warn('Retry to Read')\n// node.warn(global.get('deviceProfile_30_Index'))\n// node.warn(global.get('deviceProfile_30_ReadIndex'))\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1040,"y":420,"wires":[["120be936.1da507"]]},{"id":"75ccb0a1.399ab","type":"function","z":"b2199363.bd9d2","name":"","func":"node.warn('Move On Next Device')\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":740,"y":440,"wires":[["120be936.1da507"]]},{"id":"4dcc4483.1f091c","type":"delay","z":"b2199363.bd9d2","name":"","pauseType":"delay","timeout":"1000","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":780,"y":391,"wires":[["75ccb0a1.399ab"]]},{"id":"ecf23d09.b3be4","type":"modbus-client","name":"","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"tcpHost":"10.102.255.141","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"300","reconnectOnTimeout":true,"reconnectTimeout":"500","parallelUnitIdsAllowed":true}]